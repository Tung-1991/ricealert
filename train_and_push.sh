#!/usr/bin/env bash
set -euo pipefail

# ===== SCRIPT HU·∫§N LUY·ªÜN & TRI·ªÇN KHAI v2.1 =====
# FIX: Th√™m l·∫°i c√°c c·ªù --ulimit ƒë√£ b·ªã thi·∫øu.

# --- C·∫§U H√åNH ---
# ƒê∆∞·ªùng d·∫´n tr√™n m√°y LOCAL c·ªßa b·∫°n
PROJECT_DIR="/home/tungn/ricealert"
IMAGE="rice-trainer:latest"
LOG_DIR="$PROJECT_DIR/log"
DATA_DIR="$PROJECT_DIR/data"
CONTAINER_NAME="rice-trainer-session"

# Th√¥ng tin VPS ƒë·ªÉ tri·ªÉn khai
VPS_USER="root"
VPS_IP="103.101.162.130"
VPS_REMOTE_PATH="/root/ricealert/"

# K·ªãch b·∫£n cho cron job h√†ng tu·∫ßn
CRON_WEEKLY_INTERVALS="1h,4h"
# K·ªãch b·∫£n cho cron job h√†ng th√°ng (train l·∫°i t·∫•t c·∫£)
CRON_MONTHLY_INTERVALS="1h,4h,1d"

# --- H√ÄM TH·ª∞C THI ---
run_training_process() {
    local debug_env="$1"
    local intervals="$2"
    
    echo "üßπ D·ªçn d·∫πp container '$CONTAINER_NAME' c≈© (n·∫øu c√≥)..."
    docker rm -f "$CONTAINER_NAME" >/dev/null 2>&1 || true

    LOGFILE="train_$(date +%F_%H-%M-%S).log"
    FULL_LOGFILE_PATH="$LOG_DIR/$LOGFILE"

    echo "---"
    echo "üê≥ B·∫Øt ƒë·∫ßu qu√° tr√¨nh hu·∫•n luy·ªán cho intervals: $intervals | Ch·∫ø ƒë·ªô DEBUG: $debug_env"
    echo "   Log s·∫Ω ƒë∆∞·ª£c l∆∞u v√†o: $LOGFILE"
    echo "---"

    # <<< S·ª¨A L·ªñI: TH√äM L·∫†I 2 D√íNG --ulimit ·ªû ƒê√ÇY >>>
    docker run --rm --name "$CONTAINER_NAME" --gpus all \
      --ulimit memlock=-1 --ulimit stack=67108864 \
      -v "$PROJECT_DIR":/app --user "$(id -u)":"$(id -g)" \
      -e DEBUG="$debug_env" \
      "$IMAGE" \
      bash -c "python -u trainer.py \"$intervals\"" 2>&1 | tee "$FULL_LOGFILE_PATH"

    echo "---"
    echo "‚úÖ Qu√° tr√¨nh hu·∫•n luy·ªán ƒë√£ ho√†n t·∫•t!"

    # --- Tri·ªÉn khai tr·ª±c ti·∫øp th∆∞ m·ª•c data ---
    echo "üöÄ Chu·∫©n b·ªã tri·ªÉn khai tr·ª±c ti·∫øp th∆∞ m·ª•c 'data' l√™n VPS..."
    
    echo "   -> B∆∞·ªõc 1/2: ƒêang x√≥a th∆∞ m·ª•c 'data' c≈© tr√™n VPS ($VPS_IP)..."
    if ssh "$VPS_USER@$VPS_IP" "rm -rf \"${VPS_REMOTE_PATH}data\""; then
        echo "      ‚úÖ X√≥a th√†nh c√¥ng."
        
        echo "   -> B∆∞·ªõc 2/2: ƒêang copy th∆∞ m·ª•c 'data' m·ªõi l√™n VPS..."
        if scp -r "$DATA_DIR" "$VPS_USER@$VPS_IP:$VPS_REMOTE_PATH"; then
            echo "      ‚úÖ Tri·ªÉn khai to√†n b·ªô th∆∞ m·ª•c 'data' th√†nh c√¥ng!"
            echo "üëâ Qu√° tr√¨nh ho√†n t·∫•t. D·ªãch v·ª• tr√™n VPS gi·ªù ƒë√£ c√≥ d·ªØ li·ªáu m·ªõi."
        else
            echo "      ‚ö†Ô∏è L·ªñI: Kh√¥ng th·ªÉ copy th∆∞ m·ª•c 'data' m·ªõi l√™n VPS."
            echo "      üëâ Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi v√† th·ª≠ copy th·ªß c√¥ng:"
            echo "      scp -r \"$DATA_DIR\" \"$VPS_USER@$VPS_IP:$VPS_REMOTE_PATH\""
        fi
    else
        echo "‚ö†Ô∏è L·ªñI: Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi VPS ƒë·ªÉ x√≥a th∆∞ m·ª•c 'data' c≈©."
        echo "üëâ Tri·ªÉn khai ƒë√£ b·ªã h·ªßy. Vui l√≤ng ki·ªÉm tra v√† th·ª±c hi·ªán th·ªß c√¥ng."
    fi

    echo "üéâ TO√ÄN B·ªò QUY TR√åNH K·∫æT TH√öC. üéâ"
}


# --- ƒêI·ªÇM B·∫ÆT ƒê·∫¶U C·ª¶A SCRIPT ---
if [[ $# -gt 0 ]]; then
    # CH·∫æ ƒê·ªò T·ª∞ ƒê·ªòNG (D√†nh cho crontab)
    case "$1" in
        weekly)
            echo "Ch·∫°y k·ªãch b·∫£n t·ª± ƒë·ªông H√ÄNG TU·∫¶N..."
            run_training_process 0 "$CRON_WEEKLY_INTERVALS"
            ;;
        monthly)
            echo "Ch·∫°y k·ªãch b·∫£n t·ª± ƒë·ªông H√ÄNG TH√ÅNG..."
            run_training_process 0 "$CRON_MONTHLY_INTERVALS"
            ;;
        *)
            echo "L·ªói: K·ªãch b·∫£n '$1' kh√¥ng ƒë∆∞·ª£c nh·∫≠n d·∫°ng."
            exit 1
            ;;
    esac
else
    # CH·∫æ ƒê·ªò T∆Ø∆†NG T√ÅC (Khi b·∫°n ch·∫°y th·ªß c√¥ng)
    read -rp "Nh·∫≠p c√°c khung th·ªùi gian mu·ªën train (vd: 1h,4h,1d): " INTERVALS_TO_TRAIN
    if [[ -z "$INTERVALS_TO_TRAIN" ]]; then
        echo "L·ªói: B·∫°n ch∆∞a nh·∫≠p khung th·ªùi gian. Tho√°t."
        exit 1
    fi

    echo "Ch·ªçn ch·∫ø ƒë·ªô ch·∫°y (C·∫£ 2 ch·∫ø ƒë·ªô ƒë·ªÅu t·ª± x√≥a container khi xong):"
    echo "  [1] RUN   (Log s·∫°ch, kh√¥ng Epoch)"
    echo "  [2] DEBUG (Log c√≥ Epoch, ƒë·ªÉ theo d√µi)"
    read -rp "Nh·∫≠p l·ª±a ch·ªçn [1-2]: " MODE_CHOICE

    DEBUG_ENV=0
    if [[ "$MODE_CHOICE" == "2" ]]; then
        DEBUG_ENV=1
    fi
    
    run_training_process "$DEBUG_ENV" "$INTERVALS_TO_TRAIN"
fi
